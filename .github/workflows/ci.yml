name: TaskEasy CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20.x'
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  test:
    name: Test & Quality Assurance
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: 📦 Install Dependencies
      run: |
        npm ci --prefer-offline --no-audit
        echo "✅ Dependencies installed successfully"
    
    - name: 🧪 Run Unit Tests
      run: |
        npm run test:ci
        echo "✅ All tests passed"
      continue-on-error: false
    
    - name: 🔍 Run Linting
      run: |
        npm run lint || echo "⚠️ Linting issues found but continuing..."
        echo "✅ Code linting completed"
      continue-on-error: true
    
    - name: 🏗️ Build Application
      run: |
        npm run build
        echo "✅ Build completed successfully"
    
    - name: 📊 Upload Test Coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: taskeasy-coverage
        fail_ci_if_error: false
      continue-on-error: true

  build:
    name: Build & Deploy
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: 📦 Install Dependencies
      run: npm ci --prefer-offline --no-audit
    
    - name: 🏗️ Build Application
      run: npm run build
    
    - name: 🎉 Build Success
      run: |
        echo "🎉 TaskEasy build completed successfully!"
        echo "📊 Commit: ${{ github.sha }}"