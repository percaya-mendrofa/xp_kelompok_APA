name: TaskEasy CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20.x'
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  test:
    name: Test & Quality Assurance
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: 📦 Install Dependencies
      run: |
        npm ci --prefer-offline --no-audit
        echo "✅ Dependencies installed successfully"
    
    - name: 🧪 Run Unit Tests
      run: |
        npm run test:ci
        echo "✅ All tests passed"
    
    - name: 🔍 Run Linting
      run: |
        npm run lint
        echo "✅ Code linting passed"
      continue-on-error: true
    
    - name: 🏗️ Build Application
      run: |
        npm run build
        echo "✅ Build completed successfully"
    
    - name: 📊 Upload Test Coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: taskeasy-coverage
        fail_ci_if_error: false
      continue-on-error: true

  build:
    name: Build & Deploy
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: 📦 Install Dependencies
      run: npm ci --prefer-offline --no-audit
    
    - name: 🏗️ Build Application
      run: npm run build
    
    - name: 📤 Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          .next/
          public/
          package.json
        retention-days: 7

  deploy:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 📥 Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
    
    - name: 🚀 Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
      env:
        NODE_ENV: production
    
    - name: 🎉 Deployment Success
      run: |
        echo "🎉 TaskEasy deployed successfully!"
        echo "📊 Commit: ${{ github.sha }}"
