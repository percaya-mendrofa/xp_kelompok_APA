name: Release Management

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🏷️ Generate Release Notes
      id: release-notes
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${{ github.ref_name }}"
        fi
        
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Generate changelog
        git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD > CHANGELOG.md
        
        echo "📝 Release notes generated for $VERSION"

    - name: 🚀 Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release-notes.outputs.version }}
        release_name: Task Manager ${{ steps.release-notes.outputs.version }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false

    - name: 📦 Build Release Assets
      run: |
        npm ci
        npm run build
        tar -czf task-manager-${{ steps.release-notes.outputs.version }}.tar.gz .next/ public/ package.json

    - name: 📎 Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ./task-manager-${{ steps.release-notes.outputs.version }}.tar.gz
        asset_name: task-manager-${{ steps.release-notes.outputs.version }}.tar.gz
        asset_content_type: application/gzip
